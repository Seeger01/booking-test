{"ast":null,"code":"var _jsxFileName = \"/Users/patrickseeger/Desktop/booking/frontend/src/pages/Auth.js\";\nimport React from \"react\";\nimport \"./Auth.css\";\n\nclass AuthPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.switchModeHandler = () => {\n      this.setState(prevState => {\n        return {\n          isLogin: !prevState.isLogin\n        };\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      const email = this.emailEl.current.value;\n      const password = this.passwordEl.current.value;\n\n      if (email.trim().length === 0 || password.trim().length === 0) {\n        return;\n      }\n\n      let requestBody = {\n        query: \"\\n\\t\\t\\t\\tquery {\\n\\t\\t\\t\\t\\tlogin(email: \\\"\".concat(email, \"\\\", password: \\\"\").concat(password, \"\\\") {\\n\\t\\t\\t\\t\\t\\tuserId\\n\\t\\t\\t\\t\\t\\ttoken\\n\\t\\t\\t\\t\\t\\ttokenExpiration\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\")\n      };\n\n      if (!this.state.isLogin) {\n        requestBody = {\n          query: \"\\n\\t\\t\\t\\t\\tmutation {\\n\\t\\t\\t\\t\\t\\tcreateUser(userInput: {email: \\\"\".concat(email, \"\\\" password: \\\"\").concat(password, \"\\\"}) {\\n\\t\\t\\t\\t\\t\\t\\t_id\\n\\t\\t\\t\\t\\t\\t\\temail\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\")\n        };\n      }\n\n      fetch(\"http://localhost:3001/graphql\", {\n        method: \"POST\",\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Request failed\");\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      isLogin: true\n    };\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"auth-form\",\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"E-mail\"), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      ref: this.emailEl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      ref: this.passwordEl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.switchModeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.isLogin ? \"Signup\" : \"Login\", \" \")));\n  }\n\n}\n\nexport default AuthPage;","map":{"version":3,"sources":["/Users/patrickseeger/Desktop/booking/frontend/src/pages/Auth.js"],"names":["React","AuthPage","Component","constructor","props","switchModeHandler","setState","prevState","isLogin","submitHandler","event","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","state","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","console","log","catch","err","createRef","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport \"./Auth.css\";\n\nclass AuthPage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLogin: true\n\t\t};\n\t\tthis.emailEl = React.createRef();\n\t\tthis.passwordEl = React.createRef();\n\t}\n\n\tswitchModeHandler = () => {\n\t\tthis.setState(prevState => {\n\t\t\treturn { isLogin: !prevState.isLogin };\n\t\t});\n\t};\n\n\tsubmitHandler = event => {\n\t\tevent.preventDefault();\n\t\tconst email = this.emailEl.current.value;\n\t\tconst password = this.passwordEl.current.value;\n\n\t\tif (email.trim().length === 0 || password.trim().length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet requestBody = {\n\t\t\tquery: `\n\t\t\t\tquery {\n\t\t\t\t\tlogin(email: \"${email}\", password: \"${password}\") {\n\t\t\t\t\t\tuserId\n\t\t\t\t\t\ttoken\n\t\t\t\t\t\ttokenExpiration\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tif (!this.state.isLogin) {\n\t\t\trequestBody = {\n\t\t\t\tquery: `\n\t\t\t\t\tmutation {\n\t\t\t\t\t\tcreateUser(userInput: {email: \"${email}\" password: \"${password}\"}) {\n\t\t\t\t\t\t\t_id\n\t\t\t\t\t\t\temail\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`\n\t\t\t};\n\t\t}\n\n\t\tfetch(\"http://localhost:3001/graphql\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(requestBody),\n\t\t\theaders: {\n\t\t\t\t\"Content-type\": \"application/json\"\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (res.status !== 200 && res.status !== 201) {\n\t\t\t\t\tthrow new Error(\"Request failed\");\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(resData => {\n\t\t\t\tconsole.log(resData);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<form className=\"auth-form\" onSubmit={this.submitHandler}>\n\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t<label htmlFor=\"E-mail\">E-mail</label>\n\t\t\t\t\t<input type=\"email\" id=\"email\" ref={this.emailEl} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t<label htmlFor=\"Password\">Password</label>\n\t\t\t\t\t<input type=\"password\" id=\"password\" ref={this.passwordEl} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-actions\">\n\t\t\t\t\t<button type=\"submit\">Submit</button>\n\t\t\t\t\t<button type=\"button\" onClick={this.switchModeHandler}>\n\t\t\t\t\t\t{this.state.isLogin ? \"Signup\" : \"Login\"}{\" \"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default AuthPage;\n"]},"metadata":{},"sourceType":"module"}