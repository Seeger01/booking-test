{"ast":null,"code":"var _jsxFileName = \"/Users/patrickseeger/Desktop/booking/frontend/src/components/Chart/Chart.js\";\nimport React from \"react\";\nimport { Bar as BarChart } from \"react-chartjs\";\nconst BOOKINGS_BUCKETS = {\n  Cheap: {\n    min: 0,\n    max: 50\n  },\n  Normal: {\n    min: 50,\n    max: 200\n  },\n  Expensive: {\n    min: 200,\n    max: 1000000000\n  }\n};\n\nconst Chart = props => {\n  const chartData = {\n    labels: [],\n    datasets: []\n  };\n  let values = [];\n\n  for (const bucket in BOOKINGS_BUCKETS) {\n    const filteredBookings = props.bookings.reduce((prev, current) => {\n      if (current.event.price > BOOKINGS_BUCKETS[bucket].min && current.event.price < BOOKINGS_BUCKETS[bucket].max) {\n        return prev + 1;\n      } else {\n        return prev;\n      }\n    }, 0);\n    values.push(filteredBookings);\n    chartData.labels.push(bucket);\n    chartData.datasets.push({\n      fillColor: \"rgba(220,220,220,0.5)\",\n      strokeColor: \"rgba(220,220,220,0.8)\",\n      highlightFill: \"rgba(220,220,220,0.75)\",\n      highlightStroke: \"rgba(220,220,220,1)\",\n      data: values\n    });\n    values = [...values];\n    values[values.length - 1] = 0;\n  }\n\n  return React.createElement(BarChart, {\n    data: chartData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  });\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/patrickseeger/Desktop/booking/frontend/src/components/Chart/Chart.js"],"names":["React","Bar","BarChart","BOOKINGS_BUCKETS","Cheap","min","max","Normal","Expensive","Chart","props","chartData","labels","datasets","values","bucket","filteredBookings","bookings","reduce","prev","current","event","price","push","fillColor","strokeColor","highlightFill","highlightStroke","data","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAG,IAAIC,QAAhB,QAAgC,eAAhC;AAEA,MAAMC,gBAAgB,GAAG;AACxBC,EAAAA,KAAK,EAAE;AACNC,IAAAA,GAAG,EAAE,CADC;AAENC,IAAAA,GAAG,EAAE;AAFC,GADiB;AAKxBC,EAAAA,MAAM,EAAE;AACPF,IAAAA,GAAG,EAAE,EADE;AAEPC,IAAAA,GAAG,EAAE;AAFE,GALgB;AASxBE,EAAAA,SAAS,EAAE;AACVH,IAAAA,GAAG,EAAE,GADK;AAEVC,IAAAA,GAAG,EAAE;AAFK;AATa,CAAzB;;AAeA,MAAMG,KAAK,GAAGC,KAAK,IAAI;AACtB,QAAMC,SAAS,GAAG;AAAEC,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAlB;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,MAAMC,MAAX,IAAqBZ,gBAArB,EAAuC;AACtC,UAAMa,gBAAgB,GAAGN,KAAK,CAACO,QAAN,CAAeC,MAAf,CAAsB,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACjE,UACCA,OAAO,CAACC,KAAR,CAAcC,KAAd,GAAsBnB,gBAAgB,CAACY,MAAD,CAAhB,CAAyBV,GAA/C,IACAe,OAAO,CAACC,KAAR,CAAcC,KAAd,GAAsBnB,gBAAgB,CAACY,MAAD,CAAhB,CAAyBT,GAFhD,EAGE;AACD,eAAOa,IAAI,GAAG,CAAd;AACA,OALD,MAKO;AACN,eAAOA,IAAP;AACA;AACD,KATwB,EAStB,CATsB,CAAzB;AAUAL,IAAAA,MAAM,CAACS,IAAP,CAAYP,gBAAZ;AACAL,IAAAA,SAAS,CAACC,MAAV,CAAiBW,IAAjB,CAAsBR,MAAtB;AACAJ,IAAAA,SAAS,CAACE,QAAV,CAAmBU,IAAnB,CAAwB;AACvBC,MAAAA,SAAS,EAAE,uBADY;AAEvBC,MAAAA,WAAW,EAAE,uBAFU;AAGvBC,MAAAA,aAAa,EAAE,wBAHQ;AAIvBC,MAAAA,eAAe,EAAE,qBAJM;AAKvBC,MAAAA,IAAI,EAAEd;AALiB,KAAxB;AAOAA,IAAAA,MAAM,GAAG,CAAC,GAAGA,MAAJ,CAAT;AACAA,IAAAA,MAAM,CAACA,MAAM,CAACe,MAAP,GAAgB,CAAjB,CAAN,GAA4B,CAA5B;AACA;;AAED,SAAO,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAElB,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA,CA5BD;;AA8BA,eAAeF,KAAf","sourcesContent":["import React from \"react\";\nimport { Bar as BarChart } from \"react-chartjs\";\n\nconst BOOKINGS_BUCKETS = {\n\tCheap: {\n\t\tmin: 0,\n\t\tmax: 50\n\t},\n\tNormal: {\n\t\tmin: 50,\n\t\tmax: 200\n\t},\n\tExpensive: {\n\t\tmin: 200,\n\t\tmax: 1000000000\n\t}\n};\n\nconst Chart = props => {\n\tconst chartData = { labels: [], datasets: [] };\n\tlet values = [];\n\tfor (const bucket in BOOKINGS_BUCKETS) {\n\t\tconst filteredBookings = props.bookings.reduce((prev, current) => {\n\t\t\tif (\n\t\t\t\tcurrent.event.price > BOOKINGS_BUCKETS[bucket].min &&\n\t\t\t\tcurrent.event.price < BOOKINGS_BUCKETS[bucket].max\n\t\t\t) {\n\t\t\t\treturn prev + 1;\n\t\t\t} else {\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t}, 0);\n\t\tvalues.push(filteredBookings);\n\t\tchartData.labels.push(bucket);\n\t\tchartData.datasets.push({\n\t\t\tfillColor: \"rgba(220,220,220,0.5)\",\n\t\t\tstrokeColor: \"rgba(220,220,220,0.8)\",\n\t\t\thighlightFill: \"rgba(220,220,220,0.75)\",\n\t\t\thighlightStroke: \"rgba(220,220,220,1)\",\n\t\t\tdata: values\n\t\t});\n\t\tvalues = [...values]\n\t\tvalues[values.length - 1] = 0\n\t}\n\n\treturn <BarChart data={chartData} />;\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}