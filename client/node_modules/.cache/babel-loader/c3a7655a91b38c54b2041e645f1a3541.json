{"ast":null,"code":"var _jsxFileName = \"/Users/patrickseeger/Desktop/booking/frontend/src/pages/Events.js\";\nimport React from \"react\";\nimport Modal from \"../components/Modal/Modal\";\nimport Backdrop from \"../components/Backdrop/Backdrop\";\nimport EventList from \"../components/Events/EventList\";\nimport AuthContext from \"../context/auth-context\";\nimport \"./Events.css\";\n\nclass EventsPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createEventHandler = () => {\n      this.setState({\n        creating: true\n      });\n    };\n\n    this.modalConfirmHandler = () => {\n      this.setState({\n        creating: false\n      });\n      const title = this.titleEl.current.value;\n      const price = +this.priceEl.current.value;\n      const date = this.dateEl.current.value;\n      const description = this.descriptionEl.current.value;\n\n      if (title.trim().length === 0 || price <= 0 || date.trim().length === 0 || description.trim().length === 0) {\n        return;\n      }\n\n      const event = {\n        title,\n        price,\n        date,\n        description\n      };\n      console.log(event);\n      const requestBody = {\n        query: \"\\n\\t\\t\\t\\t\\tmutation {\\n\\t\\t\\t\\t\\t\\tcreateEvent(eventInput: {title: \\\"\".concat(title, \"\\\", description: \\\"\").concat(description, \"\\\", price: \").concat(price, \", date: \\\"\").concat(date, \"\\\"}) {\\n\\t\\t\\t\\t\\t\\t\\t_id\\n\\t\\t\\t\\t\\t\\t\\ttitle\\n\\t\\t\\t\\t\\t\\t\\tdate\\n\\t\\t\\t\\t\\t\\t\\tprice\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\")\n      };\n      const token = this.context.token;\n      fetch(\"http://localhost:3001/graphql\", {\n        method: \"POST\",\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: \"Bearer \" + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Request failed\");\n        }\n\n        return res.json();\n      }).then(resData => {\n        this.setState(prevState => {\n          const updatedEvents = [...prevState.events];\n          updatedEvents.push({\n            _id: resData.data.createEvent._id,\n            title: resData.data.createEvent.title,\n            description: resData.data.createEvent.description,\n            date: resData.data.createEvent.date,\n            price: resData.data.createEvent.price,\n            creator: {\n              _id: this.context.userId\n            }\n          });\n          return {\n            events: updatedEvents\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        creating: false\n      });\n    };\n\n    this.state = {\n      creating: false,\n      events: [],\n      isLoading: false\n    };\n    this.titleEl = React.createRef();\n    this.priceEl = React.createRef();\n    this.dateEl = React.createRef();\n    this.descriptionEl = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  fetchEvents() {\n    this.setState({\n      isLoading: true\n    });\n    const requestBody = {\n      query: \"\\n\\t\\t\\t\\t\\tquery {\\n\\t\\t\\t\\t\\t\\tevents {\\n\\t\\t\\t\\t\\t\\t\\t_id\\n\\t\\t\\t\\t\\t\\t\\ttitle\\n\\t\\t\\t\\t\\t\\t\\tdate\\n\\t\\t\\t\\t\\t\\t\\tprice\\n\\t\\t\\t\\t\\t\\t\\tcreator {\\n\\t\\t\\t\\t\\t\\t\\t\\t_id\\n\\t\\t\\t\\t\\t\\t\\t\\temail\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\"\n    };\n    fetch(\"http://localhost:3001/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Request failed\");\n      }\n\n      return res.json();\n    }).then(resData => {\n      const events = resData.data.events;\n      this.setState({\n        events: events,\n        isLoading: false\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.state.creating && React.createElement(Backdrop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), this.state.creating && React.createElement(Modal, {\n      title: \"Add Event\",\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      ref: this.titleEl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"input\", {\n      type: \"number\",\n      id: \"price\",\n      ref: this.priceEl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"input\", {\n      type: \"datetime-local\",\n      id: \"date\",\n      ref: this.dateEl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      id: \"description\",\n      rows: \"4\",\n      ref: this.descriptionEl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })))), this.context.token && React.createElement(\"div\", {\n      className: \"events-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Share your own Events!\"), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.createEventHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Create Event\")), React.createElement(EventList, {\n      events: this.state.events,\n      userId: this.context.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }));\n  }\n\n}\n\nEventsPage.contextType = AuthContext;\nexport default EventsPage;","map":{"version":3,"sources":["/Users/patrickseeger/Desktop/booking/frontend/src/pages/Events.js"],"names":["React","Modal","Backdrop","EventList","AuthContext","EventsPage","Component","constructor","props","createEventHandler","setState","creating","modalConfirmHandler","title","titleEl","current","value","price","priceEl","date","dateEl","description","descriptionEl","trim","length","event","console","log","requestBody","query","token","context","fetch","method","body","JSON","stringify","headers","Authorization","then","res","status","Error","json","resData","prevState","updatedEvents","events","push","_id","data","createEvent","creator","userId","catch","err","modalCancelHandler","state","isLoading","createRef","componentDidMount","fetchEvents","render","contextType"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Modal from \"../components/Modal/Modal\";\nimport Backdrop from \"../components/Backdrop/Backdrop\";\nimport EventList from \"../components/Events/EventList\";\nimport AuthContext from \"../context/auth-context\";\n\nimport \"./Events.css\";\n\nclass EventsPage extends React.Component {\n\tstatic contextType = AuthContext;\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcreating: false,\n\t\t\tevents: [],\n\t\t\tisLoading: false\n\t\t};\n\t\tthis.titleEl = React.createRef();\n\t\tthis.priceEl = React.createRef();\n\t\tthis.dateEl = React.createRef();\n\t\tthis.descriptionEl = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fetchEvents();\n\t}\n\n\tcreateEventHandler = () => {\n\t\tthis.setState({ creating: true });\n\t};\n\n\tmodalConfirmHandler = () => {\n\t\tthis.setState({ creating: false });\n\t\tconst title = this.titleEl.current.value;\n\t\tconst price = +this.priceEl.current.value;\n\t\tconst date = this.dateEl.current.value;\n\t\tconst description = this.descriptionEl.current.value;\n\n\t\tif (\n\t\t\ttitle.trim().length === 0 ||\n\t\t\tprice <= 0 ||\n\t\t\tdate.trim().length === 0 ||\n\t\t\tdescription.trim().length === 0\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst event = { title, price, date, description };\n\t\tconsole.log(event);\n\n\t\tconst requestBody = {\n\t\t\tquery: `\n\t\t\t\t\tmutation {\n\t\t\t\t\t\tcreateEvent(eventInput: {title: \"${title}\", description: \"${description}\", price: ${price}, date: \"${date}\"}) {\n\t\t\t\t\t\t\t_id\n\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\tdate\n\t\t\t\t\t\t\tprice\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`\n\t\t};\n\n\t\tconst token = this.context.token;\n\n\t\tfetch(\"http://localhost:3001/graphql\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(requestBody),\n\t\t\theaders: {\n\t\t\t\t\"Content-type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + token\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (res.status !== 200 && res.status !== 201) {\n\t\t\t\t\tthrow new Error(\"Request failed\");\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(resData => {\n\t\t\t\tthis.setState(prevState => {\n\t\t\t\t\tconst updatedEvents = [...prevState.events];\n\t\t\t\t\tupdatedEvents.push({\n\t\t\t\t\t\t_id: resData.data.createEvent._id,\n\t\t\t\t\t\ttitle: resData.data.createEvent.title,\n\t\t\t\t\t\tdescription: resData.data.createEvent.description,\n\t\t\t\t\t\tdate: resData.data.createEvent.date,\n\t\t\t\t\t\tprice: resData.data.createEvent.price,\n\t\t\t\t\t\tcreator: {\n\t\t\t\t\t\t\t_id: this.context.userId\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn {events: updatedEvents};\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tmodalCancelHandler = () => {\n\t\tthis.setState({ creating: false });\n\t};\n\n\tfetchEvents() {\n\t\tthis.setState({isLoading: true});\n\t\tconst requestBody = {\n\t\t\tquery: `\n\t\t\t\t\tquery {\n\t\t\t\t\t\tevents {\n\t\t\t\t\t\t\t_id\n\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\tdate\n\t\t\t\t\t\t\tprice\n\t\t\t\t\t\t\tcreator {\n\t\t\t\t\t\t\t\t_id\n\t\t\t\t\t\t\t\temail\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`\n\t\t};\n\n\t\tfetch(\"http://localhost:3001/graphql\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(requestBody),\n\t\t\theaders: {\n\t\t\t\t\"Content-type\": \"application/json\"\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (res.status !== 200 && res.status !== 201) {\n\t\t\t\t\tthrow new Error(\"Request failed\");\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(resData => {\n\t\t\t\tconst events = resData.data.events;\n\t\t\t\tthis.setState({ events: events, isLoading: false });\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tthis.setState({ isLoading: false });\n\t\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{this.state.creating && <Backdrop />}\n\t\t\t\t{this.state.creating && (\n\t\t\t\t\t<Modal\n\t\t\t\t\t\ttitle=\"Add Event\"\n\t\t\t\t\t\tcanCancel\n\t\t\t\t\t\tcanConfirm\n\t\t\t\t\t\tonCancel={this.modalCancelHandler}\n\t\t\t\t\t\tonConfirm={this.modalConfirmHandler}\n\t\t\t\t\t>\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"title\">Title</label>\n\t\t\t\t\t\t\t\t<input type=\"text\" id=\"title\" ref={this.titleEl} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"price\">Price</label>\n\t\t\t\t\t\t\t\t<input type=\"number\" id=\"price\" ref={this.priceEl} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"date\">Date</label>\n\t\t\t\t\t\t\t\t<input type=\"datetime-local\" id=\"date\" ref={this.dateEl} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"description\">Description</label>\n\t\t\t\t\t\t\t\t<textarea id=\"description\" rows=\"4\" ref={this.descriptionEl} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Modal>\n\t\t\t\t)}\n\t\t\t\t{this.context.token && (\n\t\t\t\t\t<div className=\"events-control\">\n\t\t\t\t\t\t<p>Share your own Events!</p>\n\t\t\t\t\t\t<button className=\"btn\" onClick={this.createEventHandler}>\n\t\t\t\t\t\t\tCreate Event\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<EventList events={this.state.events} userId={this.context.userId} />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default EventsPage;\n"]},"metadata":{},"sourceType":"module"}