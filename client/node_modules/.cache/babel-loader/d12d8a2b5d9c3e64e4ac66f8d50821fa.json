{"ast":null,"code":"var _jsxFileName = \"/Users/patrickseeger/Desktop/booking/frontend/src/pages/Bookings.js\";\nimport React from \"react\";\nimport AuthContext from \"../context/auth-context\";\nimport Spinner from \"../components/Spinner/Spinner\";\nimport BookingList from \"../components/Bookings/BookingList\";\nimport Chart from \"../components/Chart/Chart\";\nimport BookingsControl from \"../components/Bookings/BookingsControl\";\n\nclass BookingsPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fecthBookings = () => {\n      this.setState({\n        isLoading: true\n      });\n      const requestBody = {\n        query: \"\\n\\t\\t\\t\\t\\tquery {\\n\\t\\t\\t\\t\\t\\tbookings {\\n\\t\\t\\t\\t\\t\\t\\t_id\\n\\t\\t\\t\\t\\t\\t\\tcreatedAt\\n\\t\\t\\t\\t\\t\\t\\tevent {\\n\\t\\t\\t\\t\\t\\t\\t\\t_id\\n\\t\\t\\t\\t\\t\\t\\t\\ttitle\\n\\t\\t\\t\\t\\t\\t\\t\\tdate\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\"\n      };\n      fetch(\"http://localhost:3001/graphql\", {\n        method: \"POST\",\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: \"Bearer \" + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Request failed\");\n        }\n\n        return res.json();\n      }).then(resData => {\n        const bookings = resData.data.bookings;\n        this.setState({\n          bookings: bookings,\n          isLoading: false\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.showDetailHandler = eventId => {\n      this.setState(prevState => {\n        const selectedEvent = prevState.events.find(e => e._id === eventId);\n        return {\n          selectedEvent: selectedEvent\n        };\n      });\n    };\n\n    this.deleteBookingHandler = bookingId => {\n      this.setState({\n        isLoading: true\n      });\n      const requestBody = {\n        query: \"\\n\\t\\t\\t\\t\\tmutation DeleteBooking($id: ID!) {\\n\\t\\t\\t\\t\\t\\tcancelBooking(bookingId: $id) {\\n\\t\\t\\t\\t\\t\\t\\t_id\\n\\t\\t\\t\\t\\t\\t\\ttitle\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\",\n        variables: {\n          id: bookingId\n        }\n      };\n      fetch(\"http://localhost:3001/graphql\", {\n        method: \"POST\",\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: \"Bearer \" + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Request failed\");\n        }\n\n        return res.json();\n      }).then(resData => {\n        this.setState(prevState => {\n          const updatedBookings = prevState.bookings.filter(booking => {\n            return booking._id !== bookingId;\n          });\n          return {\n            bookings: updatedBookings,\n            isLoading: false\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.outputHandler = output => {\n      if (output === \"list\") {\n        this.setState({\n          output: \"list\"\n        });\n      } else {\n        this.setState({\n          output: \"chart\"\n        });\n      }\n    };\n\n    this.state = {\n      isLoading: false,\n      bookings: [],\n      output: \"list\"\n    };\n  }\n\n  componentDidMount() {\n    this.fecthBookings();\n  }\n\n  render() {\n    let content = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    });\n\n    if (!this.state.isLoading) {\n      content = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(BookingsControl, {\n        activeButton: this.state.output,\n        onChange: this.outputHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, this.state.output === \"list\" ? React.createElement(BookingList, {\n        bookings: this.state.bookings,\n        onDelete: this.deleteBookingHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }) : React.createElement(Chart, {\n        bookings: this.state.bookings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nBookingsPage.contextType = AuthContext;\nexport default BookingsPage;","map":{"version":3,"sources":["/Users/patrickseeger/Desktop/booking/frontend/src/pages/Bookings.js"],"names":["React","AuthContext","Spinner","BookingList","Chart","BookingsControl","BookingsPage","Component","constructor","props","fecthBookings","setState","isLoading","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","context","token","then","res","status","Error","json","resData","bookings","data","catch","err","console","log","showDetailHandler","eventId","prevState","selectedEvent","events","find","e","_id","deleteBookingHandler","bookingId","variables","id","updatedBookings","filter","booking","outputHandler","output","state","componentDidMount","render","content","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,eAAP,MAA4B,wCAA5B;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAE1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAYnBC,aAZmB,GAYH,MAAM;AACrB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,YAAMC,WAAW,GAAG;AACnBC,QAAAA,KAAK;AADc,OAApB;AAgBAC,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAFgC;AAGtCO,QAAAA,OAAO,EAAE;AACR,0BAAgB,kBADR;AAERC,UAAAA,aAAa,EAAE,YAAY,KAAKC,OAAL,CAAaC;AAFhC;AAH6B,OAAlC,CAAL,CAQEC,IARF,CAQOC,GAAG,IAAI;AACZ,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACC,MAAJ,KAAe,GAAzC,EAA8C;AAC7C,gBAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACA;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACA,OAbF,EAcEJ,IAdF,CAcOK,OAAO,IAAI;AAChB,cAAMC,QAAQ,GAAGD,OAAO,CAACE,IAAR,CAAaD,QAA9B;AACA,aAAKnB,QAAL,CAAc;AAAEmB,UAAAA,QAAQ,EAAEA,QAAZ;AAAsBlB,UAAAA,SAAS,EAAE;AAAjC,SAAd;AACA,OAjBF,EAkBEoB,KAlBF,CAkBQC,GAAG,IAAI;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAKtB,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAd;AACA,OArBF;AAsBA,KApDkB;;AAAA,SAsDnBwB,iBAtDmB,GAsDCC,OAAO,IAAI;AAC9B,WAAK1B,QAAL,CAAc2B,SAAS,IAAI;AAC1B,cAAMC,aAAa,GAAGD,SAAS,CAACE,MAAV,CAAiBC,IAAjB,CAAsBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUN,OAArC,CAAtB;AACA,eAAO;AAAEE,UAAAA,aAAa,EAAEA;AAAjB,SAAP;AACA,OAHD;AAIA,KA3DkB;;AAAA,SA6DnBK,oBA7DmB,GA6DIC,SAAS,IAAI;AACnC,WAAKlC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,YAAMC,WAAW,GAAG;AACnBC,QAAAA,KAAK,6KADc;AASnBgC,QAAAA,SAAS,EAAE;AACVC,UAAAA,EAAE,EAAEF;AADM;AATQ,OAApB;AAcA9B,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAFgC;AAGtCO,QAAAA,OAAO,EAAE;AACR,0BAAgB,kBADR;AAERC,UAAAA,aAAa,EAAE,YAAY,KAAKC,OAAL,CAAaC;AAFhC;AAH6B,OAAlC,CAAL,CAQEC,IARF,CAQOC,GAAG,IAAI;AACZ,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACC,MAAJ,KAAe,GAAzC,EAA8C;AAC7C,gBAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACA;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACA,OAbF,EAcEJ,IAdF,CAcOK,OAAO,IAAI;AAChB,aAAKlB,QAAL,CAAc2B,SAAS,IAAI;AAC1B,gBAAMU,eAAe,GAAGV,SAAS,CAACR,QAAV,CAAmBmB,MAAnB,CAA0BC,OAAO,IAAI;AAC5D,mBAAOA,OAAO,CAACP,GAAR,KAAgBE,SAAvB;AACA,WAFuB,CAAxB;AAGA,iBAAO;AAAEf,YAAAA,QAAQ,EAAEkB,eAAZ;AAA6BpC,YAAAA,SAAS,EAAE;AAAxC,WAAP;AACA,SALD;AAMA,OArBF,EAsBEoB,KAtBF,CAsBQC,GAAG,IAAI;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAKtB,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAd;AACA,OAzBF;AA0BA,KAvGkB;;AAAA,SAyGnBuC,aAzGmB,GAyGHC,MAAM,IAAI;AACzB,UAAIA,MAAM,KAAK,MAAf,EAAuB;AACtB,aAAKzC,QAAL,CAAc;AAAEyC,UAAAA,MAAM,EAAE;AAAV,SAAd;AACA,OAFD,MAEO;AACN,aAAKzC,QAAL,CAAc;AAAEyC,UAAAA,MAAM,EAAE;AAAV,SAAd;AACA;AACD,KA/GkB;;AAElB,SAAKC,KAAL,GAAa;AACZzC,MAAAA,SAAS,EAAE,KADC;AAEZkB,MAAAA,QAAQ,EAAE,EAFE;AAGZsB,MAAAA,MAAM,EAAE;AAHI,KAAb;AAKA;;AACDE,EAAAA,iBAAiB,GAAG;AACnB,SAAK5C,aAAL;AACA;;AAuGD6C,EAAAA,MAAM,GAAG;AACR,QAAIC,OAAO,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;;AACA,QAAI,CAAC,KAAKH,KAAL,CAAWzC,SAAhB,EAA2B;AAC1B4C,MAAAA,OAAO,GACN,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,eAAD;AACC,QAAA,YAAY,EAAE,KAAKH,KAAL,CAAWD,MAD1B;AAEC,QAAA,QAAQ,EAAE,KAAKD,aAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKE,KAAL,CAAWD,MAAX,KAAsB,MAAtB,GACA,oBAAC,WAAD;AACC,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWvB,QADtB;AAEC,QAAA,QAAQ,EAAE,KAAKc,oBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,GAMA,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,KAAKS,KAAL,CAAWvB,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CALD,CADD;AAkBA;;AACD,WAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB0B,OAAjB,CAAP;AACA;;AA1IyC;;AAArClD,Y,CACEmD,W,GAAcxD,W;AA4ItB,eAAeK,YAAf","sourcesContent":["import React from \"react\";\nimport AuthContext from \"../context/auth-context\";\nimport Spinner from \"../components/Spinner/Spinner\";\nimport BookingList from \"../components/Bookings/BookingList\";\nimport Chart from \"../components/Chart/Chart\";\nimport BookingsControl from \"../components/Bookings/BookingsControl\";\n\nclass BookingsPage extends React.Component {\n\tstatic contextType = AuthContext;\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: false,\n\t\t\tbookings: [],\n\t\t\toutput: \"list\"\n\t\t};\n\t}\n\tcomponentDidMount() {\n\t\tthis.fecthBookings();\n\t}\n\n\tfecthBookings = () => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst requestBody = {\n\t\t\tquery: `\n\t\t\t\t\tquery {\n\t\t\t\t\t\tbookings {\n\t\t\t\t\t\t\t_id\n\t\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t\t\tevent {\n\t\t\t\t\t\t\t\t_id\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tdate\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`\n\t\t};\n\n\t\tfetch(\"http://localhost:3001/graphql\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(requestBody),\n\t\t\theaders: {\n\t\t\t\t\"Content-type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + this.context.token\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (res.status !== 200 && res.status !== 201) {\n\t\t\t\t\tthrow new Error(\"Request failed\");\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(resData => {\n\t\t\t\tconst bookings = resData.data.bookings;\n\t\t\t\tthis.setState({ bookings: bookings, isLoading: false });\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tthis.setState({ isLoading: false });\n\t\t\t});\n\t};\n\n\tshowDetailHandler = eventId => {\n\t\tthis.setState(prevState => {\n\t\t\tconst selectedEvent = prevState.events.find(e => e._id === eventId);\n\t\t\treturn { selectedEvent: selectedEvent };\n\t\t});\n\t};\n\n\tdeleteBookingHandler = bookingId => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst requestBody = {\n\t\t\tquery: `\n\t\t\t\t\tmutation DeleteBooking($id: ID!) {\n\t\t\t\t\t\tcancelBooking(bookingId: $id) {\n\t\t\t\t\t\t\t_id\n\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`,\n\t\t\tvariables: {\n\t\t\t\tid: bookingId\n\t\t\t}\n\t\t};\n\n\t\tfetch(\"http://localhost:3001/graphql\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(requestBody),\n\t\t\theaders: {\n\t\t\t\t\"Content-type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + this.context.token\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (res.status !== 200 && res.status !== 201) {\n\t\t\t\t\tthrow new Error(\"Request failed\");\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(resData => {\n\t\t\t\tthis.setState(prevState => {\n\t\t\t\t\tconst updatedBookings = prevState.bookings.filter(booking => {\n\t\t\t\t\t\treturn booking._id !== bookingId;\n\t\t\t\t\t});\n\t\t\t\t\treturn { bookings: updatedBookings, isLoading: false };\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tthis.setState({ isLoading: false });\n\t\t\t});\n\t};\n\n\toutputHandler = output => {\n\t\tif (output === \"list\") {\n\t\t\tthis.setState({ output: \"list\" });\n\t\t} else {\n\t\t\tthis.setState({ output: \"chart\" });\n\t\t}\n\t};\n\n\trender() {\n\t\tlet content = <Spinner />;\n\t\tif (!this.state.isLoading) {\n\t\t\tcontent = (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<BookingsControl\n\t\t\t\t\t\tactiveButton={this.state.output}\n\t\t\t\t\t\tonChange={this.outputHandler}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{this.state.output === \"list\" ? (\n\t\t\t\t\t\t\t<BookingList\n\t\t\t\t\t\t\t\tbookings={this.state.bookings}\n\t\t\t\t\t\t\t\tonDelete={this.deleteBookingHandler}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Chart bookings={this.state.bookings} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\t\treturn <React.Fragment>{content}</React.Fragment>;\n\t}\n}\n\nexport default BookingsPage;\n"]},"metadata":{},"sourceType":"module"}